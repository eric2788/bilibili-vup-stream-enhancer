name: Build And Test Extensions

on:
    push:
        branches: 
          - 'develop'
          - 'hotfix/**'
          - 'feature/**'
    pull_request:
        branches: [develop]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
              browser: [chrome, edge, chromium]
        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@master
              with:
                version: 8
            - name: Setup Node.js
              uses: actions/setup-node@v4.0.1
              with:
                  node-version: 20
                  cache: 'pnpm'
            - name: Install dependencies
              run: pnpm install
            - name: Build And Package Extensions
              run: pnpm build --zip --target=${{ matrix.browser }}-mv3
            # upload to github artifacts for each browser with matrix
            - name: Upload to GitHub Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.browser }}-mv3
                  path: build/
    test:
      runs-on: ubuntu-latest
      needs: build
      strategy:
          matrix:
              browser: [chrome, edge, chromium]
      steps:
          - uses: actions/checkout@v4
          - name: Download artifacts
            uses: actions/download-artifact@v4
            id: download
            with:
                name: ${{ matrix.browser }}-mv3
                path: build/
          - name: Unzip artifacts
            run: unzip build/${{ matrix.browser }}-mv3-prod.zip -d build/extension
          - uses: pnpm/action-setup@master
            with:
                version: 8
          - name: Setup Node.js
            uses: actions/setup-node@v4.0.1
            with:
                node-version: 20
                cache: 'pnpm'
          - name: Install dependencies
            run: pnpm install --frozen-lockfile
          - name: Install Playwright Browsers
            run: pnpm exec playwright install --with-deps
          - name: Test
            run: |
              if [ $ACTIONS_STEP_DEBUG == "true" ]; then
                export DEBUG="pw:browser"
              fi
              pnpm test -- --project=${{ matrix.browser }}
          - name: Upload Test Results
            if: always()
            uses: actions/upload-artifact@v4
            with:
                name: ${{ matrix.browser }}-test-results
                path: |
                  test-results/
                  playwright-report/
                if-no-files-found: ignore