name: Test Only @scoped

on:
    push:
        branches: 
          - 'hotfix/**'
          - 'feature/**'
        paths:
          - 'src/**'
          - 'tests/**'
          - 'playwright.config.ts'
          - 'pnpm-lock.yaml'
          - '.github/workflows/build-test.yml'
    workflow_dispatch:
        inputs:
          debug:
            description: 'Enable debug logging'
            required: false
            default: 'false'

jobs:
    fast-test:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
              browser: [chrome, edge]
        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@v2
              with:
                version: 8
            - name: Setup Node.js
              uses: actions/setup-node@v4.0.1
              with:
                  node-version: 20
                  cache: 'pnpm'
            - name: Get pnpm store directory
              shell: bash
              run: |
                echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                path: |
                  $STORE_PATH
                  node_modules
                key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                restore-keys: |
                    ${{ runner.os }}-pnpm-store-
            - name: Install dependencies
              run: pnpm install --frozen-lockfile
            - name: Build Extension and Prepare Tests
              run: pnpm test:rebuild
            - name: Cache playwright binaries
              uses: actions/cache@v3
              id: playwright-cache
              with:
                path: |
                  ~/.cache/ms-playwright
                key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
                restore-keys: |
                    ${{ runner.os }}-playwright-
            - run: pnpm exec playwright install --with-deps
              if: steps.playwright-cache.outputs.cache-hit != 'true'
            - run: pnpm exec playwright install-deps
              if: steps.playwright-cache.outputs.cache-hit == 'true'
            - name: Test
              id: test
              run: | 
                pnpm test -- --project=${{ matrix.browser }} \
                             --grep=@scoped \
                             --pass-with-no-tests \
                             --global-timeout=3600000 \
                             --timeout=60000 \
                             --max-failures=5
              env:
                DEBUG: true